Java 8 Tutorial

1. Method and Constructor References:
@FunctionalInterface
interface Converter<F, T> {
    T convert(F from);
}

class Something {
    String startsWith(String s) {
        return String.valueOf(s.charAt(0));
    }
}

Зачем делать так ?
Something something = new Something();
Converter<String, String> converter = something::startsWith;
String converted = converter.convert("Java");
System.out.println(converted);

если можно так:
Something something = new Something();
        String converted = something.startsWith("Java");
        System.out.println(converted);
        






2. Method and Constructor References:

class Person {
    String firstName;
    String lastName;

    Person() {}

    Person(String firstName, String lastName) {
        this.firstName = firstName;
        this.lastName = lastName;
    }
}

interface PersonFactory<P extends Person> {
    P create(String firstName, String lastName);
}

Зачем делать так ?
PersonFactory<Person> personFactory = Person::new;
Person person = personFactory.create("Peter", "Parker");

если можно так:
Person person = new Person("Peter", "Parker");